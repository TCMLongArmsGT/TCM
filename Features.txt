
                new ButtonInfo { buttonText = "Settings", method =() => SettingsMods.EnterSettings(), isTogglable = false, toolTip = "Opens the main settings page for the menu."},
                new ButtonInfo { buttonText = "Disconnect (UND) W", method =() => Disconnect.DisconnectMod(), toolTip = "Kicks you from lobby", isTogglable = false },
                new ButtonInfo { buttonText = "Grip Disconnect (UND) W", method =() => DisGrip.DisGripMod(), toolTip = "Kicks you from lobby", isTogglable = true },
                new ButtonInfo { buttonText = "Reconnect(UND) W?", method =() => Reconnect.ReconnectMod(), toolTip = "Reconnects you", isTogglable = false },
                new ButtonInfo { buttonText = "Comp Speed Boost(UND?) W?", method =() => CompSpeedBoost.CompSpeedBoostMod(), toolTip = "Gives you the perfect speed boost for comp", isTogglable = true },
                new ButtonInfo { buttonText = "Beacons(UND?) W", method =() => Beacons.BeaconsMod(), toolTip = "Just like ESP", isTogglable = true },
                new ButtonInfo { buttonText = "Ghost Monke(UND?) W", method =() => GhostCam.GhostCamMod(), toolTip = "Ghost monke", isTogglable = true },
                new ButtonInfo { buttonText = "Invis Monke(UND?) W", method =() => InvisMonke.InvisMonkeMod(), toolTip = "Makes you invisable", isTogglable = true },
                new ButtonInfo { buttonText = "Long Arms(UND?) NW", method =() => LongArms.LongArmsMod(), toolTip = "Gives you long arms", isTogglable = true },
                new ButtonInfo { buttonText = "Force Erupt Lava(UND?) (W) (M)", method =() => ForceEruptLava.ForceEruptLavaMod(), toolTip = "Erupts lava Master Needed", isTogglable = false },
                new ButtonInfo { buttonText = "Loud Hand Tap(UND?) W?", method =() => LoudHandTaps.LoudHandTapsMod(), toolTip = "loud hand taps", isTogglable = false },
                new ButtonInfo { buttonText = "Anti Hand Taps(UND?) W?", method =() => AntiHandTaps.AntiHandTapsMod(), toolTip = "no hand taps", isTogglable = false },
                new ButtonInfo { buttonText = "Fixes Hand Taps(UND?) W?", method =() => FixHandTaps.FixHandTapsMod(), toolTip = "fixes hand taps", isTogglable = false },
                new ButtonInfo { buttonText = "Slide Control(UND?) W?", method =() => SlideControl.SlideControlMod(), toolTip = "slide control", isTogglable = false },
                new ButtonInfo { buttonText = "Fix Slide Control(UND?) W?", method =() => FixSlideControl.FixSlideControlMod(), toolTip = "fixes slide control", isTogglable = false },
                new ButtonInfo { buttonText = "Crystal Spam(UND) W?", method =() => crystalspam.crystalspammod(), toolTip = "makes crystal noises", isTogglable = true },
                new ButtonInfo { buttonText = "Join Random Privete (UND) W?", method =() => AutoJoinPrivete.AutoJoinprivete(), toolTip = "joins random privete room", isTogglable = false },
                new ButtonInfo { buttonText = "Join Code FUCK (UND) W?", method =() => JoinFuck.JoinFuckCode(), toolTip = "joins code FUCK", isTogglable = false },
                new ButtonInfo { buttonText = "Funny Button (UND) W?", method =() => Hehe.hehemod(), toolTip = "I Have Nothing To Say", isTogglable = false },
                new ButtonInfo { buttonText = "NoClip (UND) W?", method =() => NoClip.NoClipMod(), toolTip = "", isTogglable = true },
                new ButtonInfo { buttonText = "NoClipFly (UND) W Buggy", method =() => NoClipFly.FlyNoClip(), toolTip = "", isTogglable = true },
                new ButtonInfo { buttonText = "Destroy Monsters (UND) W?", method =() => DesMon.DesMons(), toolTip = "Destroy Monsters", isTogglable = false },
                new ButtonInfo { buttonText = "Up Down (UND) W?", method =() => UpDown.UpDownMod(), toolTip = "makes you go up and down", isTogglable = true },
                new ButtonInfo { buttonText = "Bone ESP (UND) W?", method =() => BoneESP.BoneESPMod(), toolTip = "makes you go up and down", isTogglable = true },
                new ButtonInfo { buttonText = "Tag Gun (UND) W?", method =() => TagGun.TagGunMod(), toolTip = "lets you tag anyone", isTogglable = true },
            },

            new ButtonInfo[] { // Settings
                new ButtonInfo { buttonText = "Return to Main", method =() => Global.ReturnHome(), isTogglable = false, toolTip = "Returns to the main page of the menu."},
                new ButtonInfo { buttonText = "Menu", method =() => SettingsMods.MenuSettings(), isTogglable = false, toolTip = "Opens the settings for the menu."},
                new ButtonInfo { buttonText = "Cosmetics", method =() => SettingsMods.MovementSettings(), isTogglable = false, toolTip = "Opens the movement settings for the menu."},
                new ButtonInfo { buttonText = "OP Mods", method =() => SettingsMods.ProjectileSettings(), isTogglable = false, toolTip = "Opens the projectile settings for the menu."},
            },

            new ButtonInfo[] { // Menu Settings
                new ButtonInfo { buttonText = "Return to Settings", method =() => SettingsMods.EnterSettings(), isTogglable = false, toolTip = "Returns to the main settings page for the menu."},
                new ButtonInfo { buttonText = "Right Hand", enableMethod =() => SettingsMods.RightHand(), disableMethod =() => SettingsMods.LeftHand(), toolTip = "Puts the menu on your right hand."},
                new ButtonInfo { buttonText = "Notifications", enableMethod =() => SettingsMods.EnableNotifications(), disableMethod =() => SettingsMods.DisableNotifications(), enabled = !disableNotifications, toolTip = "Toggles the notifications."},
                new ButtonInfo { buttonText = "FPS Counter", enableMethod =() => SettingsMods.EnableFPSCounter(), disableMethod =() => SettingsMods.DisableFPSCounter(), enabled = fpsCounter, toolTip = "Toggles the FPS counter."},
                new ButtonInfo { buttonText = "Disconnect Button", enableMethod =() => SettingsMods.EnableDisconnectButton(), disableMethod =() => SettingsMods.DisableDisconnectButton(), enabled = disconnectButton, toolTip = "Toggles the disconnect button."},
                new ButtonInfo { buttonText = "Dont Press Me Im Warning you", method =() => DontPressButton.DontPressThisButton(), isTogglable = false, toolTip = "i warned you"},
            },

            new ButtonInfo[] { // Cosmetics
                new ButtonInfo { buttonText = "Return to Settings", method =() => SettingsMods.EnterSettings(), isTogglable = false, toolTip = "Returns to the main settings page for the menu."},
                new ButtonInfo { buttonText = "Finger Painter (CS) NW?", method =() => FingerPainter.FingerPainterCosmetic(), toolTip = "Gives Finger painter", isTogglable = true },
                new ButtonInfo { buttonText = "Werewolf Claws (CS) NW?", method =() => WerewolfClaws.WerewolfClawsCosmetic(), toolTip = "Gives Werewolf Claws", isTogglable = true },
            },

            new ButtonInfo[] { // OP Mods
                new ButtonInfo { buttonText = "Return to Settings", method =() => SettingsMods.MenuSettings(), isTogglable = false, toolTip = "Opens the settings for the menu."},
                new ButtonInfo { buttonText = "Ban All(D!) W", method =() => BanAll.BanAllMod(), toolTip = "it bans everyone very detected", isTogglable = false },
                new ButtonInfo { buttonText = "Anti RPC Ban(UND) (OP) W", method =() => AntiRPCBan.AntiRPCBanMod(), toolTip = "no report bans", isTogglable = true },
                new ButtonInfo { buttonText = "Flush RPC (UND) (OP) W", method =() => FlushRPC.RPCFlushermod(), toolTip = "no report bans", isTogglable = false },
                new ButtonInfo { buttonText = "Anti Ban(UND) (OP) W", method =() => AntiBan.AntiBanMod(), toolTip = "very OP and works", isTogglable = true },
                new ButtonInfo { buttonText = "Meta Report Menu(UND?) W", method =() => MetaReportMenu.GorillaMetaReportMenu(), toolTip = "Meta Report Menu", isTogglable = false },
                new ButtonInfo { buttonText = "Change Idenity(UND) W", method =() => ChangeIdenity.ChangeIdenityMod(), toolTip = "Changes your name and color", isTogglable = false },
                new ButtonInfo { buttonText = "AntiAFK(UND) W", method =() => AntiAFK.AntiAFKMod(), toolTip = "If you take your headset off it wont kick you from the lobby", isTogglable = true },
                new ButtonInfo { buttonText = "Anti Report(UND) W", method =() => AntiReport.AntiReportMod(), toolTip = "if someone trys to report you will disconnect", isTogglable = true },
                new ButtonInfo { buttonText = "Low Quality (UND) W", method =() => LowQ.LowQMod(), toolTip = "Gives you better fps if your pc is bad", isTogglable = true },